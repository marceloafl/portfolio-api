{
  "openapi": "3.0.0",
  "info": {
    "title": "Portfolio API",
    "version": "1.0.0",
    "contact": {
      "email": "marceloaflemes@gmail.com"
    }
  },
  "servers": [
    {
      "url": "http://localhost:8081/v1",
      "description": "Test API"
    }
  ],
  "paths": {
    "/profiles": {
      "get": {
        "summary": "Get all profiles",
        "description": "Retrieves a list of all profiles in the system. This endpoint returns detailed information about each profile.",
        "tags": ["Profiles"],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Profile"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new profile",
        "description": "Creates a new profile with the provided information. This endpoint requires the profile data to be provided in the request body. Returns the newly created profile.",
        "tags": ["Profiles"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Profile"
              },
              "examples": {
                "newProfile": {
                  "summary": "A new profile",
                  "value": {
                    "name": "John Doe",
                    "email": "john.doe@example.com",
                    "contactEmail": "contact@example.com",
                    "password": "securepassword",
                    "githubUrl": "http://github.com/johndoe",
                    "linkedinUrl": "http://linkedin.com/in/johndoe",
                    "title": "Software Engineer",
                    "subtitle": "Full Stack Developer",
                    "projects": [
                      {
                        "name": "Project One",
                        "url": "http://projectone.com",
                        "stack": "Frontend"
                      }
                    ],
                    "skills": ["JavaScript", "TypeScript", "Node.js"]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Profile created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Profile"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Missing required fields or invalid data"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/profiles/{id}": {
      "get": {
        "summary": "Get profile by ID",
        "description": "Fetches detailed information about a specific profile identified by the unique `id`. If the profile with the specified `id` does not exist, the endpoint will return a 404 Not Found error.",
        "tags": ["Profiles"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the profile",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Profile"
                }
              }
            }
          },
          "404": {
            "description": "Profile not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a profile",
        "description": "Deletes a specific profile identified by the unique `id`. If the profile with the specified `id` does not exist, the endpoint will return a 404 Not Found error.",
        "tags": ["Profiles"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the profile",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content - Profile successfully deleted"
          },
          "404": {
            "description": "Profile not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "summary": "Update a profile",
        "description": "Updates an existing profile identified by the unique `id`. Only fields provided in the request body will be updated. Returns the updated profile. If the profile with the specified `id` does not exist, the endpoint will return a 404 Not Found error.",
        "tags": ["Profiles"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the profile",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Profile"
              },
              "examples": {
                "updateProfile": {
                  "summary": "Update profile details",
                  "value": {
                    "name": "Jane Doe",
                    "email": "jane.doe@example.com",
                    "contactEmail": "contact.jane@example.com",
                    "password": "newsecurepassword",
                    "githubUrl": "http://github.com/janedoe",
                    "linkedinUrl": "http://linkedin.com/in/janedoe",
                    "title": "Senior Software Engineer",
                    "subtitle": "Backend Developer",
                    "projects": [
                      {
                        "name": "Updated Project",
                        "url": "http://updatedproject.com",
                        "stack": "Backend"
                      }
                    ],
                    "skills": ["JavaScript", "Python", "Django"]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Profile updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Profile"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Missing required fields or invalid data"
          },
          "404": {
            "description": "Profile not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Profile": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "contactEmail": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "githubUrl": {
            "type": "string"
          },
          "linkedinUrl": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "subtitle": {
            "type": "string"
          },
          "projects": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "url": {
                  "type": "string"
                },
                "stack": {
                  "type": "string",
                  "enum": ["Frontend", "Backend", "Fullstack", "Low-code"]
                }
              },
              "required": ["name", "url", "stack"]
            }
          },
          "skills": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "name",
          "email",
          "contactEmail",
          "password",
          "githubUrl",
          "linkedinUrl",
          "title",
          "subtitle",
          "projects",
          "skills"
        ]
      }
    }
  }
}
